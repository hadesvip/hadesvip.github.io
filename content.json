{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"John Doe","url":"http://hadesvip.github.io"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2018-01-19T02:46:14.348Z","updated":"2018-01-19T02:46:14.348Z","comments":false,"path":"/404.html","permalink":"http://hadesvip.github.io//404.html","excerpt":"","text":""},{"title":"关于","date":"2018-01-19T02:46:14.352Z","updated":"2018-01-19T02:46:14.352Z","comments":false,"path":"about/index.html","permalink":"http://hadesvip.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"书单","date":"2018-01-19T02:46:14.352Z","updated":"2018-01-19T02:46:14.352Z","comments":false,"path":"books/index.html","permalink":"http://hadesvip.github.io/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-01-19T02:46:14.352Z","updated":"2018-01-19T02:46:14.352Z","comments":false,"path":"categories/index.html","permalink":"http://hadesvip.github.io/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-01-19T02:02:50.990Z","updated":"2018-01-19T02:02:50.990Z","comments":true,"path":"links/index.html","permalink":"http://hadesvip.github.io/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2018-01-19T02:46:14.352Z","updated":"2018-01-19T02:46:14.352Z","comments":false,"path":"repository/index.html","permalink":"http://hadesvip.github.io/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-01-19T02:46:14.352Z","updated":"2018-01-19T02:46:14.352Z","comments":false,"path":"tags/index.html","permalink":"http://hadesvip.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"dubbo教程(一):dubbo入门Demo","slug":"dubbo教程-一-dubbo入门Demo","date":"2018-01-19T06:30:26.000Z","updated":"2018-01-20T07:01:29.496Z","comments":true,"path":"2018/01/19/dubbo教程-一-dubbo入门Demo/","link":"","permalink":"http://hadesvip.github.io/2018/01/19/dubbo教程-一-dubbo入门Demo/","excerpt":"","text":"什么是dubbo? 官网: dubbo.io 官方文档－用户手册: http://dubbo.io/books/dubbo-user-book/ 高性能和透明化的RPC远程服务调用方案 SOA 服务治理方案 dubbo能做什么? 远程化的远程方法调用d 就像调用本地方法一样调用远程方法（动态代理） 只需要简单的配置，没有任何API侵入 软负载均衡及容错机制 可在内网代替F5等硬件负载均衡器 服务自动注册与发现 不需要写死服务提供方地址，注册中心基于接口名查询服务提供者的IP地址，并且能够平滑添加或者删除服务提供者 dubbo原理 示例 项目demo已经存放在github上面 1git clone https://github.com/hadesvip/dubbo-demo.git 依赖 gradle java8 项目描述 dubbo-demo 父模块，主要维护了子模块的构建信息，构件信息 dubbo-demo-domain dubbo-demo的子模块，里面定义了数据类和接口 dubbo-demo-provider dubbo-demo的子模块，dubbo的服务提供者 dubbo-demo-consumer dubbo-demo的子模块,dubbo服务消费者 项目运行 预先安装zookeeper,并启动zk,启动一个zk就行了，生产环境上最好搭建一个zk集群（3的倍数） 构建 12cd dubbo-demogradle clean build 运行dubbo-demo-provider项目com.provider.Console方法 从控制台上面打印的日记可以看出连接到了zk上面，并把dubbo服务注册到了zk上 123456789101112131415//连接本地zk org.apache.zookeeper.ClientCnxn - Socket connection established to localh ost/127.0.0.1:2181, initiating session//ｚｋ状态为连接状态 org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x100003c49000000, negotiated timeout = 30000 org.I0Itec.zkclient.ZkClient - zookeeper state changed (SyncConnected) //在zk上面注册服务 [DUBBO] Register: dubbo://172.17.0.1:20880/com.service.UserService?anyhost=true&amp;application=dubbo-demo-provider-app&amp;dubbo=2.6.0&amp;generic=false&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=14225&amp;side=provider&amp;timestamp=1516428681983, dubbo version: 2.6.0, current host: 172.17.0.1 //订阅这个服务节点，以防止这个服务节点数据改变了，能够同步更新 [DUBBO] Subscribe: provider://172.17.0.1:20880/com.service.UserService?anyhost=true&amp;application=dubbo-demo-provider-app&amp;category=configurators&amp;check=false&amp;dubbo=2.6.0&amp;generic=false&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=14225&amp;side=provider&amp;timestamp=1516428681983, dubbo version: 2.6.0, current host: 172.17.0.1//通知订阅这些服务的提供者 [DUBBO] Notify urls for subscribe url provider://172.17.0.1:20880/com.service.UserService?anyhost=true&amp;application=dubbo-demo-provider-app&amp;category=configurators&amp;check=false&amp;dubbo=2.6.0&amp;generic=false&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=14225&amp;side=provider&amp;timestamp=1516428681983, urls: [empty://172.17.0.1:20880/com.service.UserService?anyhost=true&amp;application=dubbo-demo-provider-app&amp;category=configurators&amp;check=false&amp;dubbo=2.6.0&amp;generic=false&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=14225&amp;side=provider&amp;timestamp=1516428681983], dubbo version: 2.6.0, current host: 172.17.0.1 运行dubbo-demo-consumer项目 com.consumer.Console 控制台输出下面语句，说明服务调用成功 1User&#123;userId=&apos;001&apos;, userName=&apos;admin&apos;, email=&apos;admin@126.com&apos;&#125; 从控制台日记也可以知道一些细节 12345678910111213141516171819//连接zkINFO org.apache.zookeeper.ClientCnxn - Socket connection established to localhost/127.0.0.1:2181, initiating session//ZK状态改变为连接状态INFO org.I0Itec.zkclient.ZkClient - zookeeper state changed (SyncConnected)//注册消费者[DUBBO] Register: consumer://172.17.0.1/com.service.UserService?application=dubbo-demo-consumer-app&amp;category=consumers&amp;check=false&amp;dubbo=2.6.0&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=15803&amp;side=consumer&amp;timestamp=1516429428346, dubbo version: 2.6.0, current host: 172.17.0.1//订阅这个服务节点[DUBBO] Subscribe: consumer://172.17.0.1/com.service.UserService?application=dubbo-demo-consumer-app&amp;category=providers,configurators,routers&amp;dubbo=2.6.0&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=15803&amp;side=consumer&amp;timestamp=1516429428346, dubbo version: 2.6.0, current host: 172.17.0.1// 通知订阅了这个地址的服务消费者[DUBBO] Notify urls for subscribe url consumer://172.17.0.1/com.service.UserService?application=dubbo-demo-consumer-app&amp;category=providers,configurators,routers&amp;dubbo=2.6.0&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=15803&amp;side=consumer&amp;timestamp=1516429428346, urls: [dubbo://172.17.0.1:20880/com.service.UserService?anyhost=true&amp;application=dubbo-demo-provider-app&amp;dubbo=2.6.0&amp;generic=false&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=14225&amp;side=provider&amp;timestamp=1516428681983, empty://172.17.0.1/com.service.UserService?application=dubbo-demo-consumer-app&amp;category=configurators&amp;dubbo=2.6.0&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=15803&amp;side=consumer&amp;timestamp=1516429428346, empty://172.17.0.1/com.service.UserService?application=dubbo-demo-consumer-app&amp;category=routers&amp;dubbo=2.6.0&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=15803&amp;side=consumer&amp;timestamp=1516429428346], dubbo version: 2.6.0, current host: 172.17.0.1//成功连接到这个服务地址Successed connect to server /172.17.0.1:20880 from NettyClient 172.17.0.1 using dubbo version 2.6.0, channel is NettyChannel [channel=[id: 0x7f2cfe3f, /172.17.0.1:49624 =&gt; /172.17.0.1:20880]], dubbo version: 2.6.0, current host: 172.17.0.1Refer dubbo service com.service.UserService from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&amp;application=dubbo-demo-consumer-app&amp;check=false&amp;dubbo=2.6.0&amp;generic=false&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=15803&amp;register.ip=172.17.0.1&amp;remote.timestamp=1516428681983&amp;side=consumer&amp;timestamp=1516429428346, dubbo version: 2.6.0, current host: 172.17.0.1 在dubbo-demo-provider 控制台也会有下面日记输出 1234567891011//消费者请求4:22:45.913 [New I/O server worker #1-1] WARN c.a.d.r.transport.AbstractServer - [DUBBO] All clients has discontected from /172.17.0.1:20880. You can graceful shutdown now., dubbo version: 2.6.0, current host: 172.17.0.114:22:45.913 [DubboServerHandler-172.17.0.1:20880-thread-3] INFO c.a.d.r.protocol.dubbo.DubboProtocol - [DUBBO] disconected from /192.168.31.44:49580,url:dubbo://172.17.0.1:20880/com.service.UserService?anyhost=true&amp;application=dubbo-demo-provider-app&amp;bind.ip=172.17.0.1&amp;bind.port=20880&amp;channel.readonly.sent=true&amp;codec=dubbo&amp;dubbo=2.6.0&amp;generic=false&amp;heartbeat=60000&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=14225&amp;side=provider&amp;timestamp=1516428681983, dubbo version: 2.6.0, current host: 172.17.0.114:23:49.175 [New I/O server worker #1-2] WARN c.a.d.r.transport.AbstractServer - [DUBBO] All clients has discontected from /172.17.0.1:20880. You can graceful shutdown now., dubbo version: 2.6.0, current host: 172.17.0.114:23:49.175 [DubboServerHandler-172.17.0.1:20880-thread-6] INFO c.a.d.r.protocol.dubbo.DubboProtocol - [DUBBO] disconected from/192.168.31.44:49624,url:dubbo://172.17.0.1:20880/com.service.UserService?anyhost=true&amp;application=dubbo-demo-provider-app&amp;bind.ip=172.17.0.1&amp;bind.port=20880&amp;channel.readonly.sent=true&amp;codec=dubbo&amp;dubbo=2.6.0&amp;generic=false&amp;heartbeat=60000&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=14225&amp;side=provider&amp;timestamp=1516428681983, dubbo version: 2.6.0, current host: 172.17.0.1 更多资料 https://dubbo.io","categories":[{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/tags/java/"},{"name":"dubbo","slug":"dubbo","permalink":"http://hadesvip.github.io/tags/dubbo/"},{"name":"rpc","slug":"rpc","permalink":"http://hadesvip.github.io/tags/rpc/"},{"name":"soa","slug":"soa","permalink":"http://hadesvip.github.io/tags/soa/"}]},{"title":"codeStyle模板和p3c代码规则检测插件配置","slug":"codeStyle模板和p3c代码规则检测插件配置","date":"2018-01-19T03:25:39.000Z","updated":"2018-01-19T07:13:16.915Z","comments":true,"path":"2018/01/19/codeStyle模板和p3c代码规则检测插件配置/","link":"","permalink":"http://hadesvip.github.io/2018/01/19/codeStyle模板和p3c代码规则检测插件配置/","excerpt":"","text":"格式化模板 使用的是谷歌的codeStyle 地址 1git clone https://github.com/google/styleguide.git 配置(下面是关于idea中的配置,eclipse同理) eclipse 选择的是eclipse-java-google-style.xml ,idea 选择的是 intellij-java-google-style.xml p3c代码规则检测插件 阿里的代码规则检测插件 地址 1git clone https://github.com/alibaba/p3c.git 安装 idea eclipse 参照官方描述 https://github.com/alibaba/p3c/tree/master/eclipse-plugin 使用 参照 https://github.com/alibaba/p3c/wiki","categories":[{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/categories/java/"}],"tags":[{"name":"工作笔记","slug":"工作笔记","permalink":"http://hadesvip.github.io/tags/工作笔记/"},{"name":"工具","slug":"工具","permalink":"http://hadesvip.github.io/tags/工具/"},{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/tags/java/"}]}]}