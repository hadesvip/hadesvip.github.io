{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"John Doe","url":"http://hadesvip.github.io"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2018-01-23T11:54:16.711Z","updated":"2018-01-23T11:54:16.711Z","comments":false,"path":"/404.html","permalink":"http://hadesvip.github.io//404.html","excerpt":"","text":""},{"title":"书单","date":"2018-01-23T11:54:16.711Z","updated":"2018-01-23T11:54:16.711Z","comments":false,"path":"books/index.html","permalink":"http://hadesvip.github.io/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-01-23T11:54:16.711Z","updated":"2018-01-23T11:54:16.711Z","comments":false,"path":"categories/index.html","permalink":"http://hadesvip.github.io/categories/index.html","excerpt":"","text":""},{"title":"关于","date":"2018-01-23T11:54:16.711Z","updated":"2018-01-23T11:54:16.711Z","comments":false,"path":"about/index.html","permalink":"http://hadesvip.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"友情链接","date":"2018-03-09T03:55:48.931Z","updated":"2018-03-09T03:55:48.923Z","comments":true,"path":"links/index.html","permalink":"http://hadesvip.github.io/links/index.html","excerpt":"","text":"Name: link: http://blog.didispace.com/ avatar: http://blog.didispace.com/css/images/avatar.jpg desc: “程序员DD(专注于springcloud&amp;springboot)”Name: link: http://tutorials.jenkov.com/java-util-concurrent/index.html avatar: desc: “Jakob Jenkov博客(专注于Java基础)”"},{"title":"Repositories","date":"2018-01-23T11:54:16.711Z","updated":"2018-01-23T11:54:16.711Z","comments":false,"path":"repository/index.html","permalink":"http://hadesvip.github.io/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-01-23T11:54:16.711Z","updated":"2018-01-23T11:54:16.711Z","comments":false,"path":"tags/index.html","permalink":"http://hadesvip.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"搭建自己的spring Initializr服务器","slug":"搭建自己的spring-Initializr服务器","date":"2018-03-24T14:54:14.000Z","updated":"2018-03-25T13:52:04.005Z","comments":true,"path":"2018/03/24/搭建自己的spring-Initializr服务器/","link":"","permalink":"http://hadesvip.github.io/2018/03/24/搭建自己的spring-Initializr服务器/","excerpt":"","text":"概述我们idea新建springboot项目的时候会选择一个spring initializr服务地址,默认选择的是https://start.spring.io ,但是有时候我们网络不好的情况下, 这个地址连接失败,springboot项目会无法创建,这个spring initializr其实是一个springboot项目,所以只要开源了这个项目,我们自己也可以搭建一个属于自己的spring initializr 服务器,所幸spring官方在github上面开源了https://github.com/spring-io/initializr . 搭建属于spring initializr服务器 下载spring在github上面开源的initializr项目 1git clone https://github.com/spring-io/initializr 关于这个initializr项目文档 https://docs.spring.io/initializr/docs/current-SNAPSHOT/reference/htmlsingle initializr的releases版本 https://github.com/spring-io/initializr/releases 我下载的是0.4.0版本,目前最新版本是0.5.0版本,我尝试过最新版本,有jar冲突,找了半天没找到哪个jar包,所以使用的0.4.0版本. 编译initializr项目 下载0.4.0release包,然后解压,进入initializr项目root路径,执行下面命令 12cd initializr-0.4.0.RELEASE./mvnw clean install 创建一个新的web项目 项目结构 InitializrApplication.java 123456789101112131415161718package com.initializr;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;/** * 程序入口 * * @author wangyong * @date 2018年03月25日 */@SpringBootApplicationpublic class InitializrApplication &#123; public static void main(String[] args) &#123; SpringApplication.run(InitializrApplication.class, args); &#125;&#125; ​ pom.xml 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com&lt;/groupId&gt; &lt;artifactId&gt;spring-initializr&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;packaging&gt;jar&lt;/packaging&gt; &lt;name&gt;spring-initializr&lt;/name&gt; &lt;description&gt;Demo project for Spring Boot&lt;/description&gt; &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;1.5.10.RELEASE&lt;/version&gt; &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt; &lt;/parent&gt; &lt;properties&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt; &lt;java.version&gt;1.8&lt;/java.version&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;!--0.6.0目前有点问题:jar冲突--&gt; &lt;!--&lt;dependency&gt;--&gt; &lt;!--&lt;groupId&gt;io.spring.initializr&lt;/groupId&gt;--&gt; &lt;!--&lt;artifactId&gt;initializr-web&lt;/artifactId&gt;--&gt; &lt;!--&lt;version&gt;0.6.0.BUILD-SNAPSHOT&lt;/version&gt;--&gt; &lt;!--&lt;/dependency&gt;--&gt; &lt;dependency&gt; &lt;groupId&gt;io.spring.initializr&lt;/groupId&gt; &lt;artifactId&gt;initializr-web&lt;/artifactId&gt; &lt;version&gt;0.4.0.RELEASE&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt; &lt;/project&gt; application.ymlinitializr: group-id: value: com description: spring initializr project description: value: spring initializr project package-name: value: com.initializr packagings: - name: Jar id: jar default: true - name: War id: war default: false java-versions: - id: 1.8 languages: - name: JAVA id: java default: true types: - name: Maven Project id: maven-project description: Generate a Maven based project archive sts-id: starter.zip tags: build: maven format: project default: true action: /starter.zip - name: Maven POM id: maven-build description: Generate a Maven pom.xml sts-id: pom.xml tags: build: maven format: build default: false action: /pom.xml env: boms: spring-cloud: groupId: org.springframework.cloud artifactId: spring-cloud-dependencies versionProperty: spring-cloud.version order: 50 mappings: - versionRange: \"[1.2.3.RELEASE,1.3.0.RELEASE)\" version: Angel.SR6 - versionRange: \"[1.3.0.RELEASE,1.4.0.RELEASE)\" version: Brixton.SR7 - versionRange: \"[1.4.0.RELEASE,1.5.x.RELEASE)\" version: Camden.SR7 - versionRange: \"[1.5.0.RELEASE,1.5.x.BUILD-SNAPSHOT)\" version: Dalston.SR1 - versionRange: \"[1.5.x.BUILD-SNAPSHOT,2.0.0.M1)\" version: Dalston.BUILD-SNAPSHOT repositories: spring-snapshots,spring-milestones - versionRange: \"2.0.0.M1\" version: Finchley.BUILD-SNAPSHOT repositories: spring-snapshots,spring-milestones spring-cloud-services: groupId: io.pivotal.spring.cloud artifactId: spring-cloud-services-dependencies versionProperty: spring-cloud-services.version additionalBoms: [spring-cloud] mappings: - versionRange: \"[1.3.0.RELEASE,1.4.0.RELEASE)\" version: 1.2.1.RELEASE - versionRange: \"[1.4.0.RELEASE,1.5.x.RELEASE]\" version: 1.5.0.RELEASE - versionRange: \"[1.5.x.BUILD-SNAPSHOT, 2.0.0.M1)\" version: 1.5.1.BUILD-SNAPSHOT repositories: spring-snapshots,spring-milestones spring-cloud-task: groupId: org.springframework.cloud artifactId: spring-cloud-task-dependencies versionProperty: spring-cloud-task.version order: 30 mappings: - versionRange: \"[1.3.0.RELEASE, 1.4.0.RELEASE]\" version: 1.0.3.RELEASE - versionRange: \"[1.4.0.RELEASE, 1.5.0.RC1)\" version: 1.1.2.RELEASE - versionRange: \"[1.5.0.RC1, 2.0.0.M1)\" version: 1.2.0.RELEASE vaadin: groupId: com.vaadin artifactId: vaadin-bom versionProperty: vaadin.version mappings: - versionRange: \"[1.3.0.RELEASE, 1.5.0.M1)\" version: 7.7.5 - versionRange: \"1.5.0.M1\" version: 8.0.6 stormpath: groupId: com.stormpath.sdk artifactId: stormpath-bom versionProperty: stormpath.version version: 1.5.2 keycloak: groupId: org.keycloak.bom artifactId: keycloak-adapter-bom versionProperty: keycloak.version version: 3.1.0.Final gradle: dependency-management-plugin-version: 0.6.0.RELEASE kotlin: version: 1.1.3 dependencies: - name: Core content: - name: Security id: security description: Secure your application via spring-security weight: 100 links: - rel: guide href: https://spring.io/guides/gs/securing-web/ description: Securing a Web Application - rel: guide href: https://spring.io/guides/tutorials/spring-boot-oauth2/ description: Spring Boot and OAuth2 - rel: guide href: https://spring.io/guides/gs/authenticating-ldap/ description: Authenticating a User with LDAP - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-security - name: AOP id: aop description: Aspect-oriented programming including spring-aop and AspectJ - name: Atomikos (JTA) id: jta-atomikos description: JTA distributed transactions via Atomikos versionRange: 1.2.0.M1 links: - rel: guide href: https://spring.io/guides/gs/managing-transactions/ description: Managing Transactions - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-jta-atomikos - name: Bitronix (JTA) id: jta-bitronix description: JTA distributed transactions via Bitronix versionRange: 1.2.0.M1 links: - rel: guide href: https://spring.io/guides/gs/managing-transactions/ description: Managing Transactions - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-jta-bitronix - name: Narayana (JTA) id: jta-narayana description: JTA distributed transactions via Narayana versionRange: 1.4.0.M2 links: - rel: guide href: https://spring.io/guides/gs/managing-transactions/ description: Managing Transactions - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-jta-narayana - name: Cache id: cache description: Spring's Cache abstraction versionRange: 1.3.0.M1 links: - rel: guide href: https://spring.io/guides/gs/caching/ description: Caching Data with Spring - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-caching - name: DevTools id: devtools groupId: org.springframework.boot artifactId: spring-boot-devtools scope: runtime description: Spring Boot Development Tools versionRange: 1.3.0.M1 starter: false links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#using-boot-devtools - name: Configuration Processor id: configuration-processor groupId: org.springframework.boot artifactId: spring-boot-configuration-processor scope: compileOnly description: Generate metadata for your custom configuration keys versionRange: 1.2.0.RELEASE starter: false links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#configuration-metadata-annotation-processor - name: Validation id: validation description: JSR-303 validation infrastructure (already included with web) versionRange: 1.3.0.M1 links: - rel: guide href: https://spring.io/guides/gs/validating-form-input/ title: Validating Form Input - name: Session id: session groupId: org.springframework.session artifactId: spring-session description: API and implementations for managing a user’s session information versionRange: \"[1.3.0.M2,2.0.0.M2]\" starter: false - name: Retry id: retry groupId: org.springframework.retry artifactId: spring-retry description: Provide declarative retry support via spring-retry versionRange: 1.3.0.M2 starter: false - name: Lombok id: lombok groupId: org.projectlombok artifactId: lombok scope: compileOnly description: Java annotation library which helps to reduce boilerplate code and code faster mappings: - versionRange: \"[1.2.0.RELEASE,1.4.0.M1)\" version: 1.16.6 starter: false - name: Web content: - name: Web id: web description: Full-stack web development with Tomcat and Spring MVC weight: 100 facets: - web links: - rel: guide href: https://spring.io/guides/gs/rest-service/ description: Building a RESTful Web Service - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-developing-web-applications - rel: guide href: https://spring.io/guides/gs/serving-web-content/ description: Serving Web Content with Spring MVC - rel: guide href: https://spring.io/guides/tutorials/bookmarks/ description: Building REST services with Spring - name: Reactive Web id: webflux versionRange: 2.0.0.M1 description: Reactive web development with Netty and Spring WebFlux weight: 90 - name: Websocket id: websocket description: Websocket development with SockJS and STOMP links: - rel: guide href: https://spring.io/guides/gs/messaging-stomp-websocket/ description: Using WebSocket to build an interactive web application - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-websockets - name: Web Services id: web-services description: Contract-first SOAP service development with Spring Web Services aliases: - ws mappings: - versionRange: 1.4.0.M3 artifactId: spring-boot-starter-web-services - versionRange: \"[1.1.0.RELEASE,1.4.0.M3)\" artifactId: spring-boot-starter-ws links: - rel: guide href: https://spring.io/guides/gs/producing-web-service/ description: Producing a SOAP web service - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-webservices - name: Jersey (JAX-RS) id: jersey description: RESTful Web Services framework with support of JAX-RS versionRange: 1.2.0.RELEASE links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-jersey - name: Apache CXF (JAX-RS) id: cxf-jaxrs groupId: org.apache.cxf artifactId: cxf-spring-boot-starter-jaxrs version: 3.1.11 description: RESTful Web Services framework with support of JAX-RS versionRange: \"[1.4.0.RELEASE,2.0.0.M1)\" links: - rel: reference href: https://cxf.apache.org/docs/springboot.html#SpringBoot-SpringBootCXFJAX-RSStarter - name: Ratpack id: ratpack description: Spring Boot integration for the Ratpack framework groupId: io.ratpack artifactId: ratpack-spring-boot version: 1.1.1 versionRange: \"[1.2.0.RELEASE,2.0.0.M1)\" starter: false - name: Vaadin id: vaadin facets: - web groupId: com.vaadin artifactId: vaadin-spring-boot-starter description: Vaadin java web application framework bom: vaadin versionRange: 1.2.0.RELEASE mappings: - versionRange: \"[1.2.0.RELEASE,1.4.0.RELEASE)\" version: 1.0.2 - versionRange: \"[1.4.0.RELEASE,1.5.0.M1)\" version: 1.2.0 links: - rel: guide href: https://spring.io/guides/gs/crud-with-vaadin/ description: Creating CRUD UI with Vaadin - rel: reference href: https://vaadin.com/spring - name: Rest Repositories id: data-rest weight: 10 description: Exposing Spring Data repositories over REST via spring-data-rest-webmvc links: - rel: guide href: https://spring.io/guides/gs/accessing-data-rest/ description: Accessing JPA Data with REST - rel: guide href: https://spring.io/guides/gs/accessing-neo4j-data-rest/ description: Accessing Neo4j Data with REST - rel: guide href: https://spring.io/guides/gs/accessing-mongodb-data-rest/ description: Accessing MongoDB Data with REST - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#howto-use-exposing-spring-data-repositories-rest-endpoint - name: HATEOAS id: hateoas description: HATEOAS-based RESTful services versionRange: 1.2.2.RELEASE links: - rel: guide href: https://spring.io/guides/gs/rest-hateoas/ description: Building a Hypermedia-Driven RESTful Web Service - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-spring-hateoas - name: Rest Repositories HAL Browser id: data-rest-hal description: Browsing Spring Data REST repositories in your browser groupId: org.springframework.data artifactId: spring-data-rest-hal-browser versionRange: 1.3.0.M1 starter: false - name: Mobile id: mobile description: Simplify the development of mobile web applications with spring-mobile - name: REST Docs id: restdocs description: Document RESTful services by combining hand-written and auto-generated documentation groupId: org.springframework.restdocs artifactId: spring-restdocs-mockmvc mappings: - versionRange: \"[1.2.0.RELEASE,1.3.0.RC1)\" version: 1.0.1.RELEASE scope: test - name: Stormpath id: stormpath description: Stormpath default starter including Spring MVC, Thymeleaf and Spring Security groupId: com.stormpath.spring artifactId: stormpath-default-spring-boot-starter versionRange: \"[1.5.0.RC1,2.0.0.M1)\" bom: stormpath - name: Keycloak id: keycloak description: Keycloak integration, an open source Identity and Access Management solution. groupId: org.keycloak artifactId: keycloak-spring-boot-starter versionRange: \"[1.5.3.RELEASE,2.0.0.M1)\" bom: keycloak links: - rel: reference href: https://keycloak.gitbooks.io/documentation/securing_apps/topics/oidc/java/spring-boot-adapter.html - name: Template Engines content: - name: Freemarker id: freemarker description: FreeMarker templating engine facets: - web keywords: - template links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-spring-mvc-template-engines - name: Velocity id: velocity description: Velocity templating engine versionRange: \"[1.1.6.RELEASE,1.4.0.M2)\" facets: - web keywords: - template - name: Groovy Templates id: groovy-templates description: Groovy templating engine facets: - web links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-spring-mvc-template-engines - name: Thymeleaf id: thymeleaf description: Thymeleaf templating engine, including integration with Spring weight: 100 facets: - web keywords: - template links: - rel: guide href: https://spring.io/guides/gs/handling-form-submission/ description: Handling Form Submission - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-spring-mvc-template-engines - name: Mustache id: mustache description: Mustache templating engine versionRange: 1.2.2.RELEASE facets: - web keywords: - template links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-spring-mvc-template-engines - name: SQL content: - name: JPA id: data-jpa description: Java Persistence API including spring-data-jpa, spring-orm and Hibernate weight: 100 aliases: - jpa links: - rel: guide href: https://spring.io/guides/gs/accessing-data-jpa/ description: Accessing Data with JPA - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-jpa-and-spring-data - name: JOOQ id: jooq description: Persistence support using Java Object Oriented Querying versionRange: 1.3.0.M2 links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-jooq - name: MyBatis id: mybatis description: Persistence support using MyBatis groupId: org.mybatis.spring.boot artifactId: mybatis-spring-boot-starter mappings: - versionRange: \"[1.3.0.RELEASE,1.4.0.RELEASE)\" version: 1.1.1 - versionRange: \"[1.4.0.RELEASE,1.5.0.RELEASE)\" version: 1.2.1 - versionRange: 1.5.0.RELEASE version: 1.3.0 - name: JDBC id: jdbc description: JDBC databases links: - rel: guide href: https://spring.io/guides/gs/relational-data-access/ description: Accessing Relational Data using JDBC with Spring - rel: guide href: https://spring.io/guides/gs/managing-transactions/ description: Managing Transactions - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-sql - name: H2 id: h2 description: H2 database (with embedded support) groupId: com.h2database artifactId: h2 scope: runtime starter: false - name: HSQLDB id: hsql description: HSQLDB database (with embedded support) groupId: org.hsqldb artifactId: hsqldb scope: runtime starter: false - name: Apache Derby id: derby description: Apache Derby database (with embedded support) groupId: org.apache.derby artifactId: derby scope: runtime versionRange: 1.2.2.RELEASE starter: false - name: MySQL id: mysql description: MySQL jdbc driver groupId: mysql artifactId: mysql-connector-java scope: runtime starter: false links: - rel: guide href: https://spring.io/guides/gs/accessing-data-mysql/ description: Accessing data with MySQL - name: PostgreSQL id: postgresql description: PostgreSQL jdbc driver groupId: org.postgresql artifactId: postgresql mappings: - versionRange: \"[1.2.0.RELEASE,1.3.0.M1)\" version: 9.4-1201-jdbc41 scope: runtime starter: false - name: SQL Server id: sqlserver description: Microsoft SQL Server jdbc driver versionRange: 1.5.0.RC1 groupId: com.microsoft.sqlserver artifactId: mssql-jdbc scope: runtime starter: false - name: Flyway id: flyway description: Flyway Database Migrations library groupId: org.flywaydb artifactId: flyway-core starter: false links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#howto-execute-flyway-database-migrations-on-startup - name: Liquibase id: liquibase description: Liquibase Database Migrations library groupId: org.liquibase artifactId: liquibase-core starter: false links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#howto-execute-liquibase-database-migrations-on-startup - name: NoSQL content: - name: MongoDB id: data-mongodb description: MongoDB NoSQL Database, including spring-data-mongodb weight: 50 links: - rel: guide href: https://spring.io/guides/gs/accessing-data-mongodb/ description: Accessing Data with MongoDB - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-mongodb - name: Reactive MongoDB id: data-mongodb-reactive description: MongoDB NoSQL Database, including spring-data-mongodb and the reactive driver versionRange: 2.0.0.M1 weight: 50 links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-mongodb - name: Embedded MongoDB id: flapdoodle-mongo description: Embedded MongoDB for testing versionRange: 1.3.0.RELEASE groupId: de.flapdoodle.embed artifactId: de.flapdoodle.embed.mongo scope: test starter: false - name: Cassandra id: data-cassandra description: Cassandra NoSQL Database, including spring-data-cassandra versionRange: 1.3.0.RC1 links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-cassandra - name: Reactive Cassandra id: data-cassandra-reactive description: Cassandra NoSQL Database, including spring-data-cassandra and the reactive driver versionRange: 2.0.0.M1 links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-cassandra - name: Couchbase id: data-couchbase description: Couchbase NoSQL database, including spring-data-couchbase versionRange: 1.4.0.M1 links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-couchbase - name: Neo4j id: data-neo4j description: Neo4j NoSQL graph database, including spring-data-neo4j versionRange: 1.4.0.M2 links: - rel: guide href: https://spring.io/guides/gs/accessing-data-neo4j/ description: Accessing Data with Neo4j - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-neo4j - name: Redis id: data-redis description: Redis key-value data store, including spring-data-redis and Jedis aliases: - redis mappings: - versionRange: 1.4.0.M1 artifactId: spring-boot-starter-data-redis - versionRange: \"[1.1.5.RELEASE,1.4.0.M1)\" artifactId: spring-boot-starter-redis links: - rel: guide href: https://spring.io/guides/gs/messaging-redis/ description: Messaging with Redis - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-redis - name: Reactive Redis id: data-redis-reactive description: Redis key-value data store, including spring-data-redis and Lettuce versionRange: 2.0.0.M1 links: - rel: guide href: https://spring.io/guides/gs/messaging-redis/ description: Messaging with Redis - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-redis - name: Gemfire id: data-gemfire description: GemFire distributed data store including spring-data-gemfire versionRange: \"[1.1.0.RELEASE,2.0.0.M1)\" links: - rel: guide href: https://spring.io/guides/gs/accessing-data-gemfire/ description: Accessing Data with GemFire - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-gemfire - name: Solr id: data-solr description: Apache Solr search platform, including spring-data-solr links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-solr - name: Elasticsearch id: data-elasticsearch description: Elasticsearch search and analytics engine including spring-data-elasticsearch weight: 10 links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-elasticsearch - name: Cloud Core bom: spring-cloud versionRange: 1.2.3.RELEASE content: - name: Cloud Connectors id: cloud-connectors description: Simplifies connecting to services in cloud platforms, including spring-cloud-connector and spring-cloud-cloudfoundry-connector versionRange: 1.2.0.RELEASE - name: Cloud Bootstrap id: cloud-starter description: spring-cloud-context (e.g. Bootstrap context and @RefreshScope) groupId: org.springframework.cloud artifactId: spring-cloud-starter weight: 100 - name: Cloud Security id: cloud-security description: Secure load balancing and routing with spring-cloud-security groupId: org.springframework.cloud artifactId: spring-cloud-starter-security - name: Cloud OAuth2 id: cloud-oauth2 description: OAuth2 and distributed application patterns with spring-cloud-security groupId: org.springframework.cloud artifactId: spring-cloud-starter-oauth2 - name: Cloud Task id: cloud-task description: Task result tracking along with integration with batch and streams groupId: org.springframework.cloud artifactId: spring-cloud-starter-task versionRange: \"[1.3.0.RELEASE,2.0.0.M1)\" bom: spring-cloud-task mappings: - versionRange: \"[1.3.0.RELEASE,1.3.x.RELEASE]\" artifactId: spring-cloud-task-starter - versionRange: \"1.4.0.RELEASE\" - name: Cloud Config bom: spring-cloud versionRange: 1.2.3.RELEASE content: - name: Config Client id: cloud-config-client description: spring-cloud-config Client groupId: org.springframework.cloud artifactId: spring-cloud-starter-config weight: 100 - name: Config Server id: cloud-config-server description: Central management for configuration via a git or svn backend groupId: org.springframework.cloud artifactId: spring-cloud-config-server links: - rel: guide href: https://spring.io/guides/gs/centralized-configuration/ description: Centralized Configuration - name: Vault Configuration id: cloud-starter-vault-config description: Configuration management with HashiCorp Vault versionRange: 1.5.3.RELEASE starter: false groupId: org.springframework.cloud artifactId: spring-cloud-starter-vault-config - name: Zookeeper Configuration id: cloud-starter-zookeeper-config description: Configuration management with Zookeeper and spring-cloud-zookeeper-config versionRange: 1.3.0.M4 groupId: org.springframework.cloud artifactId: spring-cloud-starter-zookeeper-config - name: Consul Configuration id: cloud-starter-consul-config description: Configuration management with Hashicorp Consul versionRange: 1.3.0.M4 groupId: org.springframework.cloud artifactId: spring-cloud-starter-consul-config - name: Cloud Discovery bom: spring-cloud versionRange: 1.2.3.RELEASE content: - name: Eureka Discovery id: cloud-eureka description: Service discovery using spring-cloud-netflix and Eureka groupId: org.springframework.cloud artifactId: spring-cloud-starter-eureka weight: 100 - name: Eureka Server id: cloud-eureka-server description: spring-cloud-netflix Eureka Server groupId: org.springframework.cloud artifactId: spring-cloud-starter-eureka-server links: - rel: guide href: https://spring.io/guides/gs/service-registration-and-discovery/ description: Service Registration and Discovery - name: Zookeeper Discovery id: cloud-starter-zookeeper-discovery description: Service discovery with Zookeeper and spring-cloud-zookeeper-discovery versionRange: 1.3.0.M4 groupId: org.springframework.cloud artifactId: spring-cloud-starter-zookeeper-discovery - name: Cloud Foundry Discovery id: cloud-cloudfoundry-discovery description: Service discovery with Cloud Foundry versionRange: 1.3.0.M4 groupId: org.springframework.cloud artifactId: spring-cloud-cloudfoundry-discovery - name: Consul Discovery id: cloud-starter-consul-discovery description: Service discovery with Hashicorp Consul versionRange: 1.3.0.M4 groupId: org.springframework.cloud artifactId: spring-cloud-starter-consul-discovery - name: Cloud Routing bom: spring-cloud versionRange: 1.2.3.RELEASE content: - name: Zuul id: cloud-zuul description: Intelligent and programmable routing with spring-cloud-netflix Zuul groupId: org.springframework.cloud artifactId: spring-cloud-starter-zuul links: - rel: guide href: https://spring.io/guides/gs/routing-and-filtering/ description: Routing and Filtering - name: Ribbon id: cloud-ribbon description: Client side load balancing with spring-cloud-netflix and Ribbon groupId: org.springframework.cloud artifactId: spring-cloud-starter-ribbon links: - rel: guide href: https://spring.io/guides/gs/client-side-load-balancing/ description: Client Side Load Balancing with Ribbon and Spring Cloud - name: Feign id: cloud-feign description: Declarative REST clients with spring-cloud-netflix Feign groupId: org.springframework.cloud artifactId: spring-cloud-starter-feign - name: Cloud Circuit Breaker bom: spring-cloud versionRange: 1.2.3.RELEASE content: - name: Hystrix id: cloud-hystrix description: Circuit breaker with spring-cloud-netflix Hystrix groupId: org.springframework.cloud artifactId: spring-cloud-starter-hystrix links: - rel: guide href: https://spring.io/guides/gs/circuit-breaker/ description: Circuit Breaker - name: Hystrix Dashboard id: cloud-hystrix-dashboard description: Circuit breaker dashboard with spring-cloud-netflix Hystrix groupId: org.springframework.cloud artifactId: spring-cloud-starter-hystrix-dashboard - name: Turbine id: cloud-turbine description: Circuit breaker metric aggregation using spring-cloud-netflix with Turbine and server-sent events groupId: org.springframework.cloud artifactId: spring-cloud-starter-turbine - name: Turbine Stream id: cloud-turbine-stream description: Circuit breaker metric aggregation using spring-cloud-netflix with Turbine and Spring Cloud Stream (choose a specific Stream binder implementation to complement this) versionRange: 1.3.0.M5 groupId: org.springframework.cloud artifactId: spring-cloud-starter-turbine-stream weight: -1 - name: Cloud Tracing bom: spring-cloud versionRange: 1.3.0.M4 content: - name: Sleuth id: cloud-starter-sleuth description: Distributed tracing via logs with spring-cloud-sleuth groupId: org.springframework.cloud artifactId: spring-cloud-starter-sleuth - name: Zipkin Client id: cloud-starter-zipkin description: Distributed tracing with an existing Zipkin installation and spring-cloud-sleuth-zipkin. Alternatively, consider Sleuth Stream. groupId: org.springframework.cloud artifactId: spring-cloud-starter-zipkin - name: Sleuth Stream id: cloud-sleuth-stream description: Marshals Spring Cloud Sleuth Spans over a Spring Cloud Stream binder groupId: org.springframework.cloud artifactId: spring-cloud-sleuth-stream - name: Zipkin Stream id: cloud-sleuth-zipkin-stream description: Consumes span data in messages from Spring Cloud Sleuth Stream and writes them to a Zipkin store groupId: org.springframework.cloud artifactId: spring-cloud-sleuth-zipkin-stream - name: Zipkin UI id: zipkin-ui description: add the Zipkin UI module to the Zipkin server to get a Zipkin service that accepts Spans and provides visualization groupId: io.zipkin.java artifactId: zipkin-autoconfigure-ui scope: runtime versionRange: 1.3.3.RELEASE starter: false - name: Cloud Messaging bom: spring-cloud versionRange: 1.2.3.RELEASE content: - name: Cloud Bus AMQP id: cloud-bus-amqp description: A simple control bus with AMQP and spring-cloud-bus-amqp groupId: org.springframework.cloud artifactId: spring-cloud-starter-bus-amqp - name: Cloud Bus Kafka id: cloud-bus-kafka description: A simple control bus with Kafka and spring-cloud-bus versionRange: \"1.3.0.RELEASE\" groupId: org.springframework.cloud artifactId: spring-cloud-starter-bus-kafka - name: Stream Rabbit id: cloud-stream-binder-rabbit description: Messaging microservices with RabbitMQ versionRange: 1.3.0.M4 groupId: org.springframework.cloud artifactId: spring-cloud-starter-stream-rabbit - name: Stream Kafka id: cloud-stream-binder-kafka description: Messaging microservices with Kafka versionRange: 1.3.0.M4 groupId: org.springframework.cloud artifactId: spring-cloud-stream-binder-kafka - name: Cloud AWS bom: spring-cloud versionRange: 1.2.3.RELEASE content: - name: AWS Core id: cloud-aws description: AWS native services from spring-cloud-aws groupId: org.springframework.cloud artifactId: spring-cloud-starter-aws - name: AWS JDBC id: cloud-aws-jdbc description: Relational databases on AWS with RDS and spring-cloud-aws-jdbc groupId: org.springframework.cloud artifactId: spring-cloud-starter-aws-jdbc - name: AWS Messaging id: cloud-aws-messaging description: Messaging on AWS with SQS and spring-cloud-aws-messaging groupId: org.springframework.cloud artifactId: spring-cloud-starter-aws-messaging - name: Cloud Cluster bom: spring-cloud versionRange: \"[1.3.0.M4,1.4.0.RC1)\" content: - name: Cluster Redis id: cloud-cluster-redis description: Leadership election and global state with Redis and spring-cloud-cluster-redis groupId: org.springframework.cloud artifactId: spring-cloud-cluster-redis - name: Cluster Zookeeper id: cloud-cluster-zookeeper description: Leadership election and global state with Zookeeper and spring-cloud-cluster-zookeeper groupId: org.springframework.cloud artifactId: spring-cloud-cluster-zookeeper - name: Cluster Hazelcast id: cloud-cluster-hazelcast description: Leadership election and global state with Hazelcast and spring-cloud-cluster-hazelcast groupId: org.springframework.cloud artifactId: spring-cloud-cluster-hazelcast - name: Cluster Etcd id: cloud-cluster-etcd description: Leadership election and global state with Etcd and spring-cloud-cluster-etcd groupId: org.springframework.cloud artifactId: spring-cloud-cluster-etcd - name: Cloud Contract bom: spring-cloud versionRange: 1.4.0.RC1 content: - name: Cloud Contract Verifier id: cloud-contract-verifier description: Test dependencies required for autogenerated tests groupId: org.springframework.cloud artifactId: spring-cloud-starter-contract-verifier scope: test starter: false - name: Cloud Contract Stub Runner id: cloud-contract-stub-runner description: Stub Runner for HTTP/Messaging based communication groupId: org.springframework.cloud artifactId: spring-cloud-starter-contract-stub-runner scope: test starter: false - name: Cloud Contract WireMock id: cloud-contract-wiremock description: Test dependencies required for the WireMock HTTP server groupId: org.springframework.cloud artifactId: spring-cloud-contract-wiremock scope: test starter: false - name: Pivotal Cloud Foundry bom: spring-cloud-services versionRange: \"[1.3.0.RELEASE,2.0.0.M1)\" content: - name: Config Client (PCF) id: scs-config-client description: Config client on Pivotal Cloud Foundry groupId: io.pivotal.spring.cloud artifactId: spring-cloud-services-starter-config-client - name: Service Registry (PCF) id: scs-service-registry description: Eureka service discovery on Pivotal Cloud Foundry groupId: io.pivotal.spring.cloud artifactId: spring-cloud-services-starter-service-registry - name: Circuit Breaker (PCF) id: scs-circuit-breaker description: Hystrix circuit breaker on Pivotal Cloud Foundry groupId: io.pivotal.spring.cloud artifactId: spring-cloud-services-starter-circuit-breaker - name: Social content: - name: Facebook id: social-facebook description: spring-social-facebook weight: 25 links: - rel: guide href: https://spring.io/guides/gs/register-facebook-app/ description: Registering an Application with Facebook - rel: guide href: https://spring.io/guides/gs/accessing-facebook/ description: Accessing Facebook Data - name: LinkedIn id: social-linkedin description: spring-social-linkedin - name: Twitter id: social-twitter description: spring-social-twitter links: - rel: guide href: https://spring.io/guides/gs/register-twitter-app/ description: Registering an Application with Twitter - rel: guide href: https://spring.io/guides/gs/accessing-twitter/ description: Accessing Twitter Data - name: I/O content: - name: Batch id: batch description: Spring Batch including HSQLDB database links: - rel: guide href: https://spring.io/guides/gs/batch-processing/ description: Creating a Batch Service - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#howto-batch-applications - name: Integration id: integration description: Common spring-integration modules links: - rel: guide href: https://spring.io/guides/gs/integration/ description: Integrating Data - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-integration - name: Quartz Scheduler id: quartz versionRange: 2.0.0.M2 description: Schedule jobs using Quartz - name: Activiti id: activiti-basic versionRange: \"[1.2.0.RELEASE,2.0.0.M1)\" description: Activiti BPMN workflow engine groupId: org.activiti artifactId: activiti-spring-boot-starter-basic version: 5.21.0 - name: Apache Camel id: camel versionRange: \"[1.4.0.RELEASE,2.0.0.M1)\" description: Integration using Apache Camel groupId: org.apache.camel artifactId: camel-spring-boot-starter version: 2.19.1 - name: JMS (ActiveMQ) id: activemq description: Java Message Service API via Apache ActiveMQ versionRange: 1.4.0.RC1 links: - rel: guide href: https://spring.io/guides/gs/messaging-jms/ description: Messaging with JMS - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-activemq - name: JMS (Artemis) id: artemis description: Java Message Service API via Apache Artemis versionRange: 1.3.0.M2 links: - rel: guide href: https://spring.io/guides/gs/messaging-jms/ description: Messaging with JMS - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-artemis - name: JMS (HornetQ) id: hornetq description: Java Message Service API via HornetQ versionRange: \"[1.1.0.RELEASE,1.4.0.RC1)\" links: - rel: guide href: https://spring.io/guides/gs/messaging-jms/ description: Messaging with JMS - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-hornetq - name: AMQP id: amqp description: Advanced Message Queuing Protocol via spring-rabbit links: - rel: guide href: https://spring.io/guides/gs/messaging-rabbitmq/ description: Messaging with RabbitMQ - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-amqp - name: Kafka id: kafka weight: 100 description: Kafka messaging support using Spring Kafka versionRange: 1.5.0.RC1 groupId: org.springframework.kafka artifactId: spring-kafka starter: false links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-kafka - name: Mail id: mail description: javax.mail versionRange: 1.2.0.RC1 links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-email - name: LDAP id: data-ldap description: LDAP support, including spring-data-ldap versionRange: 1.5.0.RC1 links: - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#boot-features-ldap - name: Ops content: - name: Actuator id: actuator description: Production ready features to help you monitor and manage your application links: - rel: guide href: https://spring.io/guides/gs/actuator-service/ description: Building a RESTful Web Service with Spring Boot Actuator - rel: reference href: http://docs.spring.io/spring-boot/docs/&#123;bootVersion&#125;/reference/htmlsingle/#production-ready - name: Actuator Docs id: actuator-docs description: API documentation for the Actuator endpoints versionRange: 1.3.0.M4 groupId: org.springframework.boot artifactId: spring-boot-actuator-docs - name: Remote Shell id: remote-shell description: CRaSH shell integration versionRange: \"[1.0.0.RELEASE,1.5.0.RC1)\" 运行项目 运行项目,看到如下日记就启动成功 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647/library/jdk1.8.0_144/bin/java -javaagent:/home/wangyong/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/173.4548.28/lib/idea_rt.jar=41189:/home/wangyong/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/173.4548.28/bin -Dfile.encoding=UTF-8 -classpath /library/jdk1.8.0_144/jre/lib/charsets.jar:/library/jdk1.8.0_144/jre/lib/deploy.jar:/library/jdk1.8.0_144/jre/lib/ext/cldrdata.jar:/library/jdk1.8.0_144/jre/lib/ext/dnsns.jar:/library/jdk1.8.0_144/jre/lib/ext/jaccess.jar:/library/jdk1.8.0_144/jre/lib/ext/jfxrt.jar:/library/jdk1.8.0_144/jre/lib/ext/localedata.jar:/library/jdk1.8.0_144/jre/lib/ext/nashorn.jar:/library/jdk1.8.0_144/jre/lib/ext/sunec.jar:/library/jdk1.8.0_144/jre/lib/ext/sunjce_provider.jar:/library/jdk1.8.0_144/jre/lib/ext/sunpkcs11.jar:/library/jdk1.8.0_144/jre/lib/ext/zipfs.jar:/library/jdk1.8.0_144/jre/lib/javaws.jar:/library/jdk1.8.0_144/jre/lib/jce.jar:/library/jdk1.8.0_144/jre/lib/jfr.jar:/library/jdk1.8.0_144/jre/lib/jfxswt.jar:/library/jdk1.8.0_144/jre/lib/jsse.jar:/library/jdk1.8.0_144/jre/lib/management-agent.jar:/library/jdk1.8.0_144/jre/lib/plugin.jar:/library/jdk1.8.0_144/jre/lib/resources.jar:/library/jdk1.8.0_144/jre/lib/rt.jar:/code/initializr/spring-initializr/target/classes:/home/wangyong/.m2/repository/io/spring/initializr/initializr-web/0.4.0.RELEASE/initializr-web-0.4.0.RELEASE.jar:/home/wangyong/.m2/repository/io/spring/initializr/initializr-generator/0.4.0.RELEASE/initializr-generator-0.4.0.RELEASE.jar:/home/wangyong/.m2/repository/org/springframework/boot/spring-boot/1.5.10.RELEASE/spring-boot-1.5.10.RELEASE.jar:/home/wangyong/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/wangyong/.m2/repository/com/samskivert/jmustache/1.13/jmustache-1.13.jar:/home/wangyong/.m2/repository/org/springframework/boot/spring-boot-starter-mustache/1.5.10.RELEASE/spring-boot-starter-mustache-1.5.10.RELEASE.jar:/home/wangyong/.m2/repository/org/springframework/boot/spring-boot-starter-cache/1.5.10.RELEASE/spring-boot-starter-cache-1.5.10.RELEASE.jar:/home/wangyong/.m2/repository/org/springframework/spring-context/4.3.14.RELEASE/spring-context-4.3.14.RELEASE.jar:/home/wangyong/.m2/repository/org/springframework/spring-context-support/4.3.14.RELEASE/spring-context-support-4.3.14.RELEASE.jar:/home/wangyong/.m2/repository/org/springframework/spring-webmvc/4.3.14.RELEASE/spring-webmvc-4.3.14.RELEASE.jar:/home/wangyong/.m2/repository/org/springframework/spring-aop/4.3.14.RELEASE/spring-aop-4.3.14.RELEASE.jar:/home/wangyong/.m2/repository/org/springframework/spring-beans/4.3.14.RELEASE/spring-beans-4.3.14.RELEASE.jar:/home/wangyong/.m2/repository/org/springframework/spring-expression/4.3.14.RELEASE/spring-expression-4.3.14.RELEASE.jar:/home/wangyong/.m2/repository/org/springframework/hateoas/spring-hateoas/0.23.0.RELEASE/spring-hateoas-0.23.0.RELEASE.jar:/home/wangyong/.m2/repository/org/apache/ant/ant/1.10.1/ant-1.10.1.jar:/home/wangyong/.m2/repository/org/json/json/20140107/json-20140107.jar:/home/wangyong/.m2/repository/org/springframework/boot/spring-boot-starter-web/1.5.10.RELEASE/spring-boot-starter-web-1.5.10.RELEASE.jar:/home/wangyong/.m2/repository/org/springframework/boot/spring-boot-starter/1.5.10.RELEASE/spring-boot-starter-1.5.10.RELEASE.jar:/home/wangyong/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/1.5.10.RELEASE/spring-boot-autoconfigure-1.5.10.RELEASE.jar:/home/wangyong/.m2/repository/org/springframework/boot/spring-boot-starter-logging/1.5.10.RELEASE/spring-boot-starter-logging-1.5.10.RELEASE.jar:/home/wangyong/.m2/repository/ch/qos/logback/logback-classic/1.1.11/logback-classic-1.1.11.jar:/home/wangyong/.m2/repository/ch/qos/logback/logback-core/1.1.11/logback-core-1.1.11.jar:/home/wangyong/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar:/home/wangyong/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/home/wangyong/.m2/repository/org/slf4j/log4j-over-slf4j/1.7.25/log4j-over-slf4j-1.7.25.jar:/home/wangyong/.m2/repository/org/yaml/snakeyaml/1.17/snakeyaml-1.17.jar:/home/wangyong/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/1.5.10.RELEASE/spring-boot-starter-tomcat-1.5.10.RELEASE.jar:/home/wangyong/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.27/tomcat-embed-core-8.5.27.jar:/home/wangyong/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.27/tomcat-annotations-api-8.5.27.jar:/home/wangyong/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.27/tomcat-embed-el-8.5.27.jar:/home/wangyong/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.27/tomcat-embed-websocket-8.5.27.jar:/home/wangyong/.m2/repository/org/hibernate/hibernate-validator/5.3.6.Final/hibernate-validator-5.3.6.Final.jar:/home/wangyong/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/wangyong/.m2/repository/org/jboss/logging/jboss-logging/3.3.1.Final/jboss-logging-3.3.1.Final.jar:/home/wangyong/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/wangyong/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.8.10/jackson-databind-2.8.10.jar:/home/wangyong/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.8.0/jackson-annotations-2.8.0.jar:/home/wangyong/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.8.10/jackson-core-2.8.10.jar:/home/wangyong/.m2/repository/org/springframework/spring-web/4.3.14.RELEASE/spring-web-4.3.14.RELEASE.jar:/home/wangyong/.m2/repository/org/springframework/spring-core/4.3.14.RELEASE/spring-core-4.3.14.RELEASE.jar com.initializr.InitializrApplication . ____ _ __ _ _ /\\\\ / ___'_ __ _ _(_)_ __ __ _ \\ \\ \\ \\( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\ \\\\/ ___)| |_)| | | | | || (_| | ) ) ) ) ' |____| .__|_| |_|_| |_\\__, | / / / / =========|_|==============|___/=/_/_/_/ :: Spring Boot :: (v1.5.10.RELEASE)2018-03-25 21:08:34.843 INFO 3947 --- [ main] com.initializr.InitializrApplication : Starting InitializrApplication on wangyong-thinkpad-t460 with PID 3947 (/code/initializr/spring-initializr/target/classes started by wangyong in /code/initializr/spring-initializr)2018-03-25 21:08:34.886 INFO 3947 --- [ main] com.initializr.InitializrApplication : No active profile set, falling back to default profiles: default2018-03-25 21:08:35.179 INFO 3947 --- [ main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e287667: startup date [Sun Mar 25 21:08:35 CST 2018]; root of context hierarchy2018-03-25 21:08:37.616 INFO 3947 --- [ main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)2018-03-25 21:08:37.647 INFO 3947 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat]2018-03-25 21:08:37.648 INFO 3947 --- [ main] org.apache.catalina.core.StandardEngine : Starting Servlet Engine: Apache Tomcat/8.5.272018-03-25 21:08:37.868 INFO 3947 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext2018-03-25 21:08:37.869 INFO 3947 --- [ost-startStop-1] o.s.web.context.ContextLoader : Root WebApplicationContext: initialization completed in 2694 ms2018-03-25 21:08:38.136 INFO 3947 --- [ost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean : Mapping servlet: 'dispatcherServlet' to [/]2018-03-25 21:08:38.148 INFO 3947 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean : Mapping filter: 'characterEncodingFilter' to: [/*]2018-03-25 21:08:38.151 INFO 3947 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]2018-03-25 21:08:38.151 INFO 3947 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean : Mapping filter: 'httpPutFormContentFilter' to: [/*]2018-03-25 21:08:38.151 INFO 3947 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean : Mapping filter: 'requestContextFilter' to: [/*]2018-03-25 21:08:38.856 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e287667: startup date [Sun Mar 25 21:08:35 CST 2018]; root of context hierarchy2018-03-25 21:08:38.978 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/error],produces=[text/html]&#125;\" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)2018-03-25 21:08:38.979 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/error]&#125;\" onto public org.springframework.http.ResponseEntity&lt;java.util.Map&lt;java.lang.String, java.lang.Object&gt;&gt; org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)2018-03-25 21:08:39.001 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/metadata/config],produces=[application/json]&#125;\" onto public io.spring.initializr.metadata.InitializrMetadata io.spring.initializr.web.project.MainController.config()2018-03-25 21:08:39.001 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/metadata/client]&#125;\" onto public java.lang.String io.spring.initializr.web.project.MainController.client()2018-03-25 21:08:39.001 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/spring]&#125;\" onto public java.lang.String io.spring.initializr.web.project.MainController.spring()2018-03-25 21:08:39.002 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/],produces=[text/html]&#125;\" onto public java.lang.String io.spring.initializr.web.project.MainController.home(java.util.Map&lt;java.lang.String, java.lang.Object&gt;)2018-03-25 21:08:39.002 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/dependencies],produces=[application/vnd.initializr.v2.1+json || application/json]&#125;\" onto public org.springframework.http.ResponseEntity&lt;java.lang.String&gt; io.spring.initializr.web.project.MainController.dependenciesV21(java.lang.String)2018-03-25 21:08:39.003 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/spring.tar.gz || /spring.tgz]&#125;\" onto public java.lang.String io.spring.initializr.web.project.MainController.springTgz()2018-03-25 21:08:39.003 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/starter.tgz],produces=[application/x-compress]&#125;\" onto public org.springframework.http.ResponseEntity&lt;byte[]&gt; io.spring.initializr.web.project.MainController.springTgz(io.spring.initializr.generator.BasicProjectRequest) throws java.io.IOException2018-03-25 21:08:39.003 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/pom]&#125;\" onto public org.springframework.http.ResponseEntity&lt;byte[]&gt; io.spring.initializr.web.project.MainController.pom(io.spring.initializr.generator.BasicProjectRequest)2018-03-25 21:08:39.004 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/build]&#125;\" onto public org.springframework.http.ResponseEntity&lt;byte[]&gt; io.spring.initializr.web.project.MainController.gradle(io.spring.initializr.generator.BasicProjectRequest)2018-03-25 21:08:39.004 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/starter.zip]&#125;\" onto public org.springframework.http.ResponseEntity&lt;byte[]&gt; io.spring.initializr.web.project.MainController.springZip(io.spring.initializr.generator.BasicProjectRequest) throws java.io.IOException2018-03-25 21:08:39.005 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/],produces=[text/plain]&#125;\" onto public org.springframework.http.ResponseEntity&lt;java.lang.String&gt; io.spring.initializr.web.project.MainController.serviceCapabilitiesText(java.lang.String)2018-03-25 21:08:39.005 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/],produces=[application/hal+json]&#125;\" onto public org.springframework.http.ResponseEntity&lt;java.lang.String&gt; io.spring.initializr.web.project.MainController.serviceCapabilitiesHal()2018-03-25 21:08:39.005 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/],produces=[application/vnd.initializr.v2.1+json || application/json]&#125;\" onto public org.springframework.http.ResponseEntity&lt;java.lang.String&gt; io.spring.initializr.web.project.MainController.serviceCapabilitiesV21()2018-03-25 21:08:39.006 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/],produces=[application/vnd.initializr.v2+json]&#125;\" onto public org.springframework.http.ResponseEntity&lt;java.lang.String&gt; io.spring.initializr.web.project.MainController.serviceCapabilitiesV2()2018-03-25 21:08:39.009 INFO 3947 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"&#123;[/ui/dependencies],produces=[application/json]&#125;\" onto public org.springframework.http.ResponseEntity&lt;java.lang.String&gt; io.spring.initializr.web.ui.UiController.dependencies(java.lang.String)2018-03-25 21:08:39.050 INFO 3947 --- [ main] o.s.w.s.handler.SimpleUrlHandlerMapping : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]2018-03-25 21:08:39.050 INFO 3947 --- [ main] o.s.w.s.handler.SimpleUrlHandlerMapping : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]2018-03-25 21:08:39.095 INFO 3947 --- [ main] o.s.w.s.handler.SimpleUrlHandlerMapping : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]2018-03-25 21:08:41.557 INFO 3947 --- [ main] o.s.j.e.a.AnnotationMBeanExporter : Registering beans for JMX exposure on startup2018-03-25 21:08:41.623 INFO 3947 --- [ main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)2018-03-25 21:08:41.627 INFO 3947 --- [ main] com.initializr.InitializrApplication : Started InitializrApplication in 9.222 seconds (JVM running for 10.345) ​ 项目启动页面 ​ idea 编辑器中使用 github项目已经上传到github上面,地址如下: https://github.com/hadesvip/spring-initializr","categories":[],"tags":[{"name":"springboot","slug":"springboot","permalink":"http://hadesvip.github.io/tags/springboot/"}]},{"title":"使用docker运行springboot","slug":"使用docker运行springboot","date":"2018-03-22T14:10:48.000Z","updated":"2018-03-22T14:10:48.547Z","comments":true,"path":"2018/03/22/使用docker运行springboot/","link":"","permalink":"http://hadesvip.github.io/2018/03/22/使用docker运行springboot/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"自己搭建梯子翻墙","slug":"自己搭建梯子翻墙","date":"2018-03-22T14:09:15.000Z","updated":"2018-03-23T06:16:50.536Z","comments":true,"path":"2018/03/22/自己搭建梯子翻墙/","link":"","permalink":"http://hadesvip.github.io/2018/03/22/自己搭建梯子翻墙/","excerpt":"","text":"概述本人之前用过第三方提供的各种vpn,比如:影梭,云梯,蓝灯,由于政府原因,目前就蓝灯还活着,不过蓝灯太不稳定,而且速度很慢,所以决定自己搭建一个vps,本文记录了自己搭建vps遇到的各种问题,以及最后的解决方案,供大家参考,如果大家搭建过程中,有任何问题,欢迎大家留言交流. vps服务器购买 注册我使用的服务器是vultr.主要原因其是按小时收费的,随时可以停用服务器.而且可以支付宝付费,vultr注册地址: https://www.vultr.com/?ref=7368213 ,到首页进行注册. 充值购买服务器之前先进行充值,登录vultr之后,选择billing-&gt;alipay,选择要充值的金额,然后点击pay with alipay,跳到支付宝扫码页面支付就行了. 购买服务器充值完毕后,如下图选择servers-&gt;deploy new server 选择服务器地址及服务器系统,及其配置,如下图 选择项第四五六不必选择,第七个给将要部署的服务器命名及添加个label,最后选择delpoy now. ​ vps服务器部署 服务器信息查看服务器安装结束之后,在vultr管理页面,选择左侧选项servers,可以看到刚才部署的服务器信息,如下图 连接服务器使用ssh命令连接服务器 1ssh root@ip -p 端口号 下载shadowsocksR 一键管理脚本确保服务器上面安装了wget,如果没有安装,执行下面命令 1yum -y install wget 下载shadowsocksR脚本 1wget -N --no-check-certificate https://softs.fun/Bash/ssr.sh &amp;&amp; chmod +x ssr.sh 或者 1wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssr.sh &amp;&amp; chmod +x ssr.sh 安装shadowsocksR运行脚本 1bash ssr.sh 输入命令对应的数字来执行命令 1234567891011121314151617181920212223242526272829303132333435363738394041ShadowsocksR 一键管理脚本脚本 [v2.0.35]1. 安装 ShadowsocksR2. 更新 ShadowsocksR3. 卸载 ShadowsocksR4. 安装 libsodium(chacha20)————————————5. 查看 账号信息6. 显示 连接信息7. 设置 用户配置8. 手动 修改配置9. 切换 端口模式————————————10. 启动 ShadowsocksR11. 停止 ShadowsocksR12. 重启 ShadowsocksR13. 查看 ShadowsocksR 日志————————————14. 其他功能15. 升级脚本当前状态: 已安装 并 已启动当前模式: 单端口请输入数字(1-15) 输入1 ,就开始安装shadowsocksR 服务端并且会提示你输入ShadowsocksR的 端口/密码/加密方式/ 协议/混淆（混淆和协议是通过输入数字选择的） 等参数。虽然没有必要，但是可以考虑重启一下服务器（命令：reboot） 建议设置为 1234端口：443加密：chacha20协议：auth_sha1_v4混淆：http_simple 所以按照如下步骤配置即可（下面步骤输入的数字可能会随着版本的变化而有细微变化，以实际为准。内容太多，懒得截图了）： 运行：bash ssr.sh； 输入4：安装libsodium，chacha20加密协议的依赖包，等待安装完成，期间如果有提示输入Y记得输入一下； 运行：bash ssr.sh； 运行安装SSR的命令：1。安装ShadowsocksR； 输入端口号：443。443端口为HTTPS协议的默认端口，经过测试是最稳定的（不建议使用其他端口或者使用多端口模式，不过，如果需要在该vps服务器搭建https协议的网站的话就不能使用这个端口啦！）； 输入密码：强度越大越好，反正不需要记忆； 输入15：使用chacha20加密方式； 输入2：使用authsha1_v4协议插件，输入2并确认后会提示是否兼容原版，原版指的是Shadowsocks，没有必要选择兼容，填n后回车即可。 输入2：使用http_simple混淆，延时小，可靠性高，同样也不需要兼容原版；（小概率导致windows客户端无法连接，可尝试切换其它协议。） 然后就是一些限制，一般默认几次回车就好了。 上面的步骤无误之后一键管理脚本就开始安装SSR了，过一会儿会提示下载文件，输入y后回车即可，然后继续等待。 安装完成之后会显示服务器配置信息。包括ip、端口、密码、加密、协议、混淆等。当然这些都没必要记下来（如果Linux客户端应该是要手动输入的），配置客户端的时候只需要Xshell最下面出现的SSR链接即可。 ​ 安装BBR和封禁垃圾端口运行bash ssr.sh命令后输入14即可进入安装BBR和封禁垃圾端口的界面。这两个都按提示部署一下即可，注意BBR安装的时候可能会提示“是否终止卸载内核”，这是系统检测到使用了权限较高的操作，因为BBR需要更换内核，所以我们要选择NO。BBR是google开发的拥塞控制算法，亲测有效，安装之后google秒开，不安装延时相当大。 shadowsocks 客户端配置推荐使用SSR+chrome插件SwitchyOmega,由谷歌插件决定是否走代理,由于SSR项目由于某些原因已经从GitHub移除了，所以SSR的PCA模式已经不能使用了,好在国内牛人在github上面开源了一个项目electron-ssr,正好我是linux系统,正好合适. shadowsocks客户端 推荐electron-ssr https://github.com/erguotou520/electron-ssr ,如下图所示,支持mac,linux,win平台 配置 ssh连接刚才的vultr服务器,运行ssr脚本 1234567891011121314151617181920212223242526272829303132333435363738394041ShadowsocksR 一键管理脚本脚本 [v2.0.35]1. 安装 ShadowsocksR2. 更新 ShadowsocksR3. 卸载 ShadowsocksR4. 安装 libsodium(chacha20)————————————5. 查看 账号信息6. 显示 连接信息7. 设置 用户配置8. 手动 修改配置9. 切换 端口模式————————————10. 启动 ShadowsocksR11. 停止 ShadowsocksR12. 重启 ShadowsocksR13. 查看 ShadowsocksR 日志————————————14. 其他功能15. 升级脚本当前状态: 已安装 并 已启动当前模式: 单端口请输入数字(1-15) 输入数字5 查看账号信息,将账号信息对应的填入electron-ssr客户端服务器配置信息中. ​ 最后在谷歌的插件SwitchyOmega中配置下代理地址 至此为止,所有的配置已经完成,尽情享受吧. 其他客户端 安卓 https://github.com/shadowsocksr-backup/shadowsocksr-android/releases ios https://github.com/j-proxy/iossos","categories":[],"tags":[{"name":"vpn","slug":"vpn","permalink":"http://hadesvip.github.io/tags/vpn/"},{"name":"vps","slug":"vps","permalink":"http://hadesvip.github.io/tags/vps/"}]},{"title":"2018年清单","slug":"2018年清单","date":"2018-02-23T03:48:17.000Z","updated":"2018-02-23T06:31:49.022Z","comments":true,"path":"2018/02/23/2018年清单/","link":"","permalink":"http://hadesvip.github.io/2018/02/23/2018年清单/","excerpt":"","text":"生活 作息做到规律,做到早睡早起,做到早上6点起床,晚上11点睡觉 坚持锻炼,把体重控制到150左右 周末时间多出去走走,不继续宅家里,多运动 学会做五六个小菜 工作 工作多做计划,把每天工作的内容做清单 每周对本周的工作内容进行复盘,每月对本月内容进行复盘 学习 坚持写博客,做到每周一篇博文 springcloud nio netty grpc jvm dubbo源码分析继续 并发 微信小程序 计划看的书籍 netty实战 Docker开发指南 Docker经典实例 Effective Java第三版 kafka kotlin实战","categories":[{"name":"杂七杂八","slug":"杂七杂八","permalink":"http://hadesvip.github.io/categories/杂七杂八/"}],"tags":[{"name":"杂七杂八","slug":"杂七杂八","permalink":"http://hadesvip.github.io/tags/杂七杂八/"}]},{"title":"kafka教程(一):hello,world","slug":"kafka教程-hello-world","date":"2018-02-09T10:25:18.000Z","updated":"2018-02-23T06:12:33.737Z","comments":true,"path":"2018/02/09/kafka教程-hello-world/","link":"","permalink":"http://hadesvip.github.io/2018/02/09/kafka教程-hello-world/","excerpt":"","text":"下载kafka的官方网站是http://kafka.apache.org, 到官网下载最新版kafka_2.11-1.0.0.tgz,如下图 解压kafka_2.11-1.0.0.tgz,其目录结构如下123456789101112➜ kafka_2.11-1.0.0 ll# 存放的kafka的一系列脚本,用于操作kafkabin# kafka所需的配置config# kafka所需要的jar包libsLICENSENOTICE# 文档site-docs 运行第一个实例运行第一个实例: 生产者向kafka发送一条消息,消费者从kafka中接收一条消息 下载并配置zookeeper kafka依赖zk,通过zk来管理各种数据和元数据,kafka内部自带了zk,我们单独下载一个zk. zk官网网址:http://zookeeper.apache.org, 我们下载zookeeper-3.4.11版本,下面是我zoo.cfg中的配置 123456tickTime=2000initLimit=10syncLimit=5dataDir=/library/zookeeper-3.4.11/dataclientPort=2181","categories":[{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/categories/java/"},{"name":"kafka","slug":"java/kafka","permalink":"http://hadesvip.github.io/categories/java/kafka/"}],"tags":[{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/tags/java/"},{"name":"kafka","slug":"kafka","permalink":"http://hadesvip.github.io/tags/kafka/"}]},{"title":"dubbo源码分析(二):dubbo的SPI扩展实现","slug":"dubbo源码分析-二-dubbo的SPI扩展实现","date":"2018-01-31T08:47:46.000Z","updated":"2018-02-04T14:48:48.089Z","comments":true,"path":"2018/01/31/dubbo源码分析-二-dubbo的SPI扩展实现/","link":"","permalink":"http://hadesvip.github.io/2018/01/31/dubbo源码分析-二-dubbo的SPI扩展实现/","excerpt":"","text":"JDK中的SPI缺点 jdk中spi是一次性把扩展点的实现全部实例化,如果扩展点的实现很多加载很耗时间 异常无法准确捕捉提示,当扩展点的的某个实现依赖的第三方库不存在,会导致类加载失败,报的错误是找不到扩展点,而不是扩展点加载失败,以及真正的原因 dubbo对SPI的改进 增加了扩展点的默认实现 增加了AOP的实现 增加了缓存机制,提高了性能 配置文件内容改成为key=value形式,这样配置是为了改进上面所说的SPI的第二点缺点,为了将异常信息和配置对应起来 dubbo SPI实现 在需要扩展点接口使用@SPI注解标识,以前使用的Extension注解,不过后来因为含义广泛废弃,改用SPI dubbo使用ExtensionLoader.getExtensionLoader(Class type)获取扩展点实例,下面是具体实现 123456789101112131415161718192021222324252627282930313233public static &lt;T&gt; ExtensionLoader&lt;T&gt; getExtensionLoader(Class&lt;T&gt; type) &#123; //如果扩展点类型为空,抛出异常 if (type == null) &#123; throw new IllegalArgumentException(&quot;Extension type == null&quot;); &#125; //扩展点不是接口,抛出异常 if (!type.isInterface()) &#123; throw new IllegalArgumentException(&quot;Extension type(&quot; + type + &quot;) is not interface!&quot;); &#125; //扩展点没有使用spi注解 if (!withExtensionAnnotation(type)) &#123; throw new IllegalArgumentException(&quot;Extension type(&quot; + type + &quot;) is not extension, because WITHOUT @&quot; + SPI.class.getSimpleName() + &quot; Annotation!&quot;); &#125; //获取扩展点,EXTENSION_LOADERS 是一个map,key是扩展点接口类型,value是一个ExtensionLoader对象 ExtensionLoader&lt;T&gt; loader = (ExtensionLoader&lt;T&gt;) EXTENSION_LOADERS.get(type); if (loader == null) &#123; EXTENSION_LOADERS.putIfAbsent(type, new ExtensionLoader&lt;T&gt;(type)); loader = (ExtensionLoader&lt;T&gt;) EXTENSION_LOADERS.get(type); &#125; return loader;&#125;private ExtensionLoader(Class&lt;?&gt; type) &#123; this.type = type; //扩展点类型如果是ExtensionLoader,返回null,否则返回扩展装饰类 objectFactory = (type == ExtensionFactory.class ? null : ExtensionLoader.getExtensionLoader(ExtensionFactory.class).getAdaptiveExtension()); &#125; 返回指定名字的扩展点对象 123456789101112131415161718192021222324252627public T getExtension(String name) &#123; if (name == null || name.length() == 0) &#123; throw new IllegalArgumentException(&quot;Extension name == null&quot;); &#125; if (&quot;true&quot;.equals(name)) &#123; return getDefaultExtension(); &#125; //从缓存中获取扩展点对象 Holder&lt;Object&gt; holder = cachedInstances.get(name); if (holder == null) &#123; cachedInstances.putIfAbsent(name, new Holder&lt;Object&gt;()); holder = cachedInstances.get(name); &#125; Object instance = holder.get(); if (instance == null) &#123; synchronized (holder) &#123; instance = holder.get(); if (instance == null) &#123; instance = createExtension(name); holder.set(instance); &#125; &#125; &#125; return (T) instance; &#125; cachedInstances 实现 123456789101112131415161718 private final ConcurrentMap&lt;String, Holder&lt;Object&gt;&gt; cachedInstances = new ConcurrentHashMap&lt;String, Holder&lt;Object&gt;&gt;(); public class Holder&lt;T&gt; &#123; /** * value线程可见性 */ private volatile T value; public void set(T value) &#123; this.value = value; &#125; public T get() &#123; return value; &#125;&#125; dubbo对spi具体使用 以protocol为例,缺省使用dubbo协议,dubbo支持默认spi扩展点 12345@SPI(&quot;dubbo&quot;)public interface Protocol &#123;//.....省略代码&#125; 配置文件 12//com.alibaba.dubbo.rpc.Protocol文件里面的配置dubbo=com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol DubboProtocol 12345678910/**jdk内部的SPI机制需要通过循环判断才能获取到扩展点实例,而dubbo只需要通过通过key就可以获取扩展点实例*/public static DubboProtocol getDubboProtocol() &#123; if (INSTANCE == null) &#123; ExtensionLoader.getExtensionLoader(Protocol.class).getExtension(DubboProtocol.NAME); // load &#125; return INSTANCE;&#125; dubbo 对IOC和AOP的增强","categories":[],"tags":[{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/tags/java/"},{"name":"dubbo源码","slug":"dubbo源码","permalink":"http://hadesvip.github.io/tags/dubbo源码/"},{"name":"dubbo","slug":"dubbo","permalink":"http://hadesvip.github.io/tags/dubbo/"}]},{"title":"SPI(service provider interface)详解","slug":"SPI-service-provider-interface-详解","date":"2018-01-23T01:56:15.000Z","updated":"2018-01-23T11:54:16.711Z","comments":true,"path":"2018/01/23/SPI-service-provider-interface-详解/","link":"","permalink":"http://hadesvip.github.io/2018/01/23/SPI-service-provider-interface-详解/","excerpt":"","text":"概述SPI全称为service provider interface ,是JDK自带的一种服务提供发现机制，类似于一种小型的IOC容器，可以自动依赖注入,动态替换服务扩展.一般用于提供第三方实现和扩展,可以增加框架的扩展和替换一些组件.目前很多框架使用了这个机制，比如spring,dubbo,还是数据库驱动包，设置JDK里面的NIO包中的SelectorProvider也是使用的这个机制. SPI约定 在META-INF/services/目录中创建接口的权限名命名的文件,该文件内容为接口实现的全限名,文件编码为UTF-8 使用SeriveLoader.load(Class class) 动态加载接口的实现 实现类必须有一个无参构造 如果SPI的实现是一个jar,放在项目的classpath目录下 springmvc对servlet3.0的支持在servlet3.0情况下,可以不使用web.xml文件,可以使用WebApplicationInitializer来初始化一个WebApplicationContext. WebApplicationInitializer加载机制:javaEE容器启动的时候会通过SPI机制寻找javax.servlet.ServletContainerInitializer的实现类,在spring-web包下面,有这个文件的定义. 12345678910111213141516171819202122232425262728293031323334353637@HandlesTypes(WebApplicationInitializer.class)public class SpringServletContainerInitializer implements ServletContainerInitializer &#123; @Override public void onStartup(Set&lt;Class&lt;?&gt;&gt; webAppInitializerClasses, ServletContext servletContext) throws ServletException &#123; List&lt;WebApplicationInitializer&gt; initializers = new LinkedList&lt;WebApplicationInitializer&gt;(); if (webAppInitializerClasses != null) &#123; for (Class&lt;?&gt; waiClass : webAppInitializerClasses) &#123; // Be defensive: Some servlet containers provide us with invalid classes, // no matter what @HandlesTypes says... if (!waiClass.isInterface() &amp;&amp; !Modifier.isAbstract(waiClass.getModifiers()) &amp;&amp; WebApplicationInitializer.class.isAssignableFrom(waiClass)) &#123; try &#123; initializers.add((WebApplicationInitializer) waiClass.newInstance()); &#125; catch (Throwable ex) &#123; throw new ServletException(&quot;Failed to instantiate WebApplicationInitializer class&quot;, ex); &#125; &#125; &#125; &#125; if (initializers.isEmpty()) &#123; servletContext.log(&quot;No Spring WebApplicationInitializer types detected on classpath&quot;); return; &#125; AnnotationAwareOrderComparator.sort(initializers); servletContext.log(&quot;Spring WebApplicationInitializers detected on classpath: &quot; + initializers); for (WebApplicationInitializer initializer : initializers) &#123; initializer.onStartup(servletContext); &#125; &#125;&#125; 在onStartup方法上面有一段这样的注释: Because this class declares @{@code &gt;HandlesTypes(WebApplicationInitializer.class)},Servlet 3.0+ containers will automatically scan the classpath for implementations of Spring’s {@code WebApplicationInitializer} interface and provide the set of allsuch types to the {@code webAppInitializerClasses} parameter of this &gt;method. 因为这个类的注解是HandlesTypes(WebApplicationInitializer.class),servlet3.0容器会自动扫描classpath下面对WebApplicationInitializer接口的实现类,并以set类型的参数提供给SpringServletContainerInitializer.onStartup()方法 自己使用SPI特性实现一个service新建一个spi-demo的工程,项目结构如下图: 定义service接口 123456package com.spi.demo.service;public interface UserService &#123; String sayHello(String userName);&#125; 提供provider实现 1234567891011package com.spi.demo.service.impl;import com.spi.demo.service.UserService;public class UserServiceImpl implements UserService &#123; @Override public String sayHello(String userName) &#123; return new StringBuffer(&quot;hello,&quot;).append(userName).append(&quot;.&quot;).toString(); &#125;&#125; 添加配置resouces/META-INF/services/目录下新建com.spi.demo.service.UserService文件,编码为UTF-8 文件内容如下: 1com.spi.demo.service.impl.UserServiceImpl 运行测试 1234567891011121314package com.spi.demo;import com.spi.demo.service.UserService;import java.util.ServiceLoader;public class Console &#123; public static void main(String[] args) &#123; ServiceLoader&lt;UserService&gt; serviceLoader = ServiceLoader.load(UserService.class); serviceLoader.iterator() .forEachRemaining(userService -&gt; System.out.println(userService.sayHello(&quot;张三&quot;))); &#125;&#125; 运行输出结果如下 1hello,张三. 参考资料 https://en.wikipedia.org/wiki/Service_provider_interface https://docs.oracle.com/javase/8/docs/api/","categories":[{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/tags/java/"},{"name":"dubbo源码","slug":"dubbo源码","permalink":"http://hadesvip.github.io/tags/dubbo源码/"}]},{"title":"高性能IO模型","slug":"高性能IO模型","date":"2018-01-20T12:41:42.000Z","updated":"2018-01-23T11:54:16.711Z","comments":true,"path":"2018/01/20/高性能IO模型/","link":"","permalink":"http://hadesvip.github.io/2018/01/20/高性能IO模型/","excerpt":"","text":"常见的IO模型 同步阻塞IO(Blocking IO) :传统的IO类型 同步非阻塞IO(Non-blocking IO):默认创建的scoket都是堵塞的，非堵塞IO要求socket被设置为NONBLOCK. IO多路服用(IO Multiplexing):经典的Reactor设计模式,异步阻塞IO,java中的Selector和Linux的epoll都是这种模型． 异步IO(AIO): 经典的Proactor设计模式，也称为异步非堵塞IO. 同步和异步同步和异步的概念描述的是用户线程与内核的交互方式:同步是指用户线程发起IO请求后需要等待或者轮询内核IO操作完成后才能继续执行；而异步是指用户线程发起IO请求后仍继续执行,当内核IO操作完成后会通知用户线程，或者调用用户线程注册的回调函数． 堵塞和非堵塞堵塞和非堵塞的概念描述的是用户线程调用内核IO操作方式:堵塞是指IO操作需要彻底完成后才返回到用户空间;而非堵塞是指IO操作被调用后立即返回给用户一个状态值，无需等到IO操作彻底完成． 同步堵塞IO同步堵塞IＯ模型是最简单的IO模型，用户线程在内核进行IO操作时候是堵塞的． 如上图所示，用户线程通过系统调用read发起IO读操作，由用户空间转到内核空间.内核等到数据包到达后，然后将接收的数据拷贝到用户空间，完成read操作． 这个过程伪代码描述 1234&#123; read(scoket,buffer) process(buffer)&#125; 用户需要等待read将socket中的数据读取到buffer后，才继续处理接收的数据，整个IO请求的过程中，用户线程是被堵塞的，这导致用户在发起IO请求时，不能做任何操作，对CPU的资源利用率不够． 同步非堵塞IOIO多路复用异步IO","categories":[{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/tags/java/"}]},{"title":"dubbo源码解析(一):构建dubbo源码","slug":"dubbo源码解析-构建dubbo源码","date":"2018-01-20T07:16:56.000Z","updated":"2018-01-31T08:53:03.737Z","comments":true,"path":"2018/01/20/dubbo源码解析-构建dubbo源码/","link":"","permalink":"http://hadesvip.github.io/2018/01/20/dubbo源码解析-构建dubbo源码/","excerpt":"","text":"学习dubbo源码好处 提高soa微服务架构理解 RPC的SOA服务治理是dubbo首先提出来的(国内)，学习架构原理更能深度的理解SOA思想 提高Java底层理解还有设计模式 tcp的单工，半双工，全双工，编码，解码，拆包，粘包，netty网络框架通信，nio,线程池，boss线程，work线程，集群负载均衡loadbalace,cluster,router,zk 下载dubbo最新源码(tag:2.8.4) dubbo项目托管在github 上面 123git clone https://github.com/dangdangdotcom/dubboxgit checkout -b dubbo-2.8.4 dubbo-2.8.4 构建环境 maven3.5.0 java8 idea 直接导入idea中 命令行构建 12cd dubbomvn clean package -DskipTests dubbo源码包介绍 dubbo-admin dubbo控制台管理项目 dubbo-cluster dubbo集群实现 dubbo-common dubbo公共类或者工具 dubbo-config dubbo配置实现 dubbo-container dubbo容器:spring容器,jetty,日记实现 dubbo-demo 官网提供的demo dubbo-filter dubbo缓存和验证 dubbo-registry dubbo核心注册中心实现,zk,redis,广播，直连 dubbo-monitor 监控模块，统计服务调用次数和时间，调用链跟踪服务 dubbo-remoting dubbo远程通讯实现 dubbo-rpc 远程调用模块 dubbo-test dubbo一些测试","categories":[{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/tags/java/"},{"name":"dubbo源码","slug":"dubbo源码","permalink":"http://hadesvip.github.io/tags/dubbo源码/"}]},{"title":"dubbo教程(一):dubbo入门Demo","slug":"dubbo教程-一-dubbo入门Demo","date":"2018-01-19T06:30:26.000Z","updated":"2018-01-23T11:54:16.711Z","comments":true,"path":"2018/01/19/dubbo教程-一-dubbo入门Demo/","link":"","permalink":"http://hadesvip.github.io/2018/01/19/dubbo教程-一-dubbo入门Demo/","excerpt":"","text":"什么是dubbo? 官网: dubbo.io 官方文档－用户手册: http://dubbo.io/books/dubbo-user-book/ 高性能和透明化的RPC远程服务调用方案 SOA 服务治理方案 dubbo能做什么? 远程化的远程方法调用d 就像调用本地方法一样调用远程方法（动态代理） 只需要简单的配置，没有任何API侵入 软负载均衡及容错机制 可在内网代替F5等硬件负载均衡器 服务自动注册与发现 不需要写死服务提供方地址，注册中心基于接口名查询服务提供者的IP地址，并且能够平滑添加或者删除服务提供者 dubbo原理 示例 项目demo已经存放在github上面 1git clone https://github.com/hadesvip/dubbo-demo.git 依赖 gradle java8 项目描述 dubbo-demo 父模块，主要维护了子模块的构建信息，构件信息 dubbo-demo-domain dubbo-demo的子模块，里面定义了数据类和接口 dubbo-demo-provider dubbo-demo的子模块，dubbo的服务提供者 dubbo-demo-consumer dubbo-demo的子模块,dubbo服务消费者 项目运行 预先安装zookeeper,并启动zk,启动一个zk就行了，生产环境上最好搭建一个zk集群（3的倍数） 构建 12cd dubbo-demogradle clean build 运行dubbo-demo-provider项目com.provider.Console方法 从控制台上面打印的日记可以看出连接到了zk上面，并把dubbo服务注册到了zk上 123456789101112131415//连接本地zk org.apache.zookeeper.ClientCnxn - Socket connection established to localh ost/127.0.0.1:2181, initiating session//ｚｋ状态为连接状态 org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x100003c49000000, negotiated timeout = 30000 org.I0Itec.zkclient.ZkClient - zookeeper state changed (SyncConnected) //在zk上面注册服务 [DUBBO] Register: dubbo://172.17.0.1:20880/com.service.UserService?anyhost=true&amp;application=dubbo-demo-provider-app&amp;dubbo=2.6.0&amp;generic=false&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=14225&amp;side=provider&amp;timestamp=1516428681983, dubbo version: 2.6.0, current host: 172.17.0.1 //订阅configurators配置 [DUBBO] Subscribe: provider://172.17.0.1:20880/com.service.UserService?anyhost=true&amp;application=dubbo-demo-provider-app&amp;category=configurators&amp;check=false&amp;dubbo=2.6.0&amp;generic=false&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=14225&amp;side=provider&amp;timestamp=1516428681983, dubbo version: 2.6.0, current host: 172.17.0.1//通知订阅这些服务的提供者 [DUBBO] Notify urls for subscribe url provider://172.17.0.1:20880/com.service.UserService?anyhost=true&amp;application=dubbo-demo-provider-app&amp;category=configurators&amp;check=false&amp;dubbo=2.6.0&amp;generic=false&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=14225&amp;side=provider&amp;timestamp=1516428681983, urls: [empty://172.17.0.1:20880/com.service.UserService?anyhost=true&amp;application=dubbo-demo-provider-app&amp;category=configurators&amp;check=false&amp;dubbo=2.6.0&amp;generic=false&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=14225&amp;side=provider&amp;timestamp=1516428681983], dubbo version: 2.6.0, current host: 172.17.0.1 运行dubbo-demo-consumer项目 com.consumer.Console 控制台输出下面语句，说明服务调用成功 1User&#123;userId=&apos;001&apos;, userName=&apos;admin&apos;, email=&apos;admin@126.com&apos;&#125; 从控制台日记也可以知道一些细节 12345678910111213141516171819//连接zkINFO org.apache.zookeeper.ClientCnxn - Socket connection established to localhost/127.0.0.1:2181, initiating session//ZK状态改变为连接状态INFO org.I0Itec.zkclient.ZkClient - zookeeper state changed (SyncConnected)//注册消费者[DUBBO] Register: consumer://172.17.0.1/com.service.UserService?application=dubbo-demo-consumer-app&amp;category=consumers&amp;check=false&amp;dubbo=2.6.0&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=15803&amp;side=consumer&amp;timestamp=1516429428346, dubbo version: 2.6.0, current host: 172.17.0.1//订阅providers,configurators,routers[DUBBO] Subscribe: consumer://172.17.0.1/com.service.UserService?application=dubbo-demo-consumer-app&amp;category=providers,configurators,routers&amp;dubbo=2.6.0&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=15803&amp;side=consumer&amp;timestamp=1516429428346, dubbo version: 2.6.0, current host: 172.17.0.1// 通知订阅了这个地址的服务消费者[DUBBO] Notify urls for subscribe url consumer://172.17.0.1/com.service.UserService?application=dubbo-demo-consumer-app&amp;category=providers,configurators,routers&amp;dubbo=2.6.0&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=15803&amp;side=consumer&amp;timestamp=1516429428346, urls: [dubbo://172.17.0.1:20880/com.service.UserService?anyhost=true&amp;application=dubbo-demo-provider-app&amp;dubbo=2.6.0&amp;generic=false&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=14225&amp;side=provider&amp;timestamp=1516428681983, empty://172.17.0.1/com.service.UserService?application=dubbo-demo-consumer-app&amp;category=configurators&amp;dubbo=2.6.0&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=15803&amp;side=consumer&amp;timestamp=1516429428346, empty://172.17.0.1/com.service.UserService?application=dubbo-demo-consumer-app&amp;category=routers&amp;dubbo=2.6.0&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=15803&amp;side=consumer&amp;timestamp=1516429428346], dubbo version: 2.6.0, current host: 172.17.0.1//成功连接到这个服务地址Successed connect to server /172.17.0.1:20880 from NettyClient 172.17.0.1 using dubbo version 2.6.0, channel is NettyChannel [channel=[id: 0x7f2cfe3f, /172.17.0.1:49624 =&gt; /172.17.0.1:20880]], dubbo version: 2.6.0, current host: 172.17.0.1Refer dubbo service com.service.UserService from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&amp;application=dubbo-demo-consumer-app&amp;check=false&amp;dubbo=2.6.0&amp;generic=false&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=15803&amp;register.ip=172.17.0.1&amp;remote.timestamp=1516428681983&amp;side=consumer&amp;timestamp=1516429428346, dubbo version: 2.6.0, current host: 172.17.0.1 在dubbo-demo-provider 控制台也会有下面日记输出 1234567891011//消费者请求4:22:45.913 [New I/O server worker #1-1] WARN c.a.d.r.transport.AbstractServer - [DUBBO] All clients has discontected from /172.17.0.1:20880. You can graceful shutdown now., dubbo version: 2.6.0, current host: 172.17.0.114:22:45.913 [DubboServerHandler-172.17.0.1:20880-thread-3] INFO c.a.d.r.protocol.dubbo.DubboProtocol - [DUBBO] disconected from /192.168.31.44:49580,url:dubbo://172.17.0.1:20880/com.service.UserService?anyhost=true&amp;application=dubbo-demo-provider-app&amp;bind.ip=172.17.0.1&amp;bind.port=20880&amp;channel.readonly.sent=true&amp;codec=dubbo&amp;dubbo=2.6.0&amp;generic=false&amp;heartbeat=60000&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=14225&amp;side=provider&amp;timestamp=1516428681983, dubbo version: 2.6.0, current host: 172.17.0.114:23:49.175 [New I/O server worker #1-2] WARN c.a.d.r.transport.AbstractServer - [DUBBO] All clients has discontected from /172.17.0.1:20880. You can graceful shutdown now., dubbo version: 2.6.0, current host: 172.17.0.114:23:49.175 [DubboServerHandler-172.17.0.1:20880-thread-6] INFO c.a.d.r.protocol.dubbo.DubboProtocol - [DUBBO] disconected from/192.168.31.44:49624,url:dubbo://172.17.0.1:20880/com.service.UserService?anyhost=true&amp;application=dubbo-demo-provider-app&amp;bind.ip=172.17.0.1&amp;bind.port=20880&amp;channel.readonly.sent=true&amp;codec=dubbo&amp;dubbo=2.6.0&amp;generic=false&amp;heartbeat=60000&amp;interface=com.service.UserService&amp;logger=log4j&amp;methods=getUserById&amp;pid=14225&amp;side=provider&amp;timestamp=1516428681983, dubbo version: 2.6.0, current host: 172.17.0.1 更多资料 https://dubbo.io","categories":[{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/tags/java/"},{"name":"dubbo","slug":"dubbo","permalink":"http://hadesvip.github.io/tags/dubbo/"},{"name":"rpc","slug":"rpc","permalink":"http://hadesvip.github.io/tags/rpc/"},{"name":"soa","slug":"soa","permalink":"http://hadesvip.github.io/tags/soa/"}]},{"title":"codeStyle模板和p3c代码规则检测插件配置","slug":"codeStyle模板和p3c代码规则检测插件配置","date":"2018-01-19T03:25:39.000Z","updated":"2018-01-23T11:54:16.711Z","comments":true,"path":"2018/01/19/codeStyle模板和p3c代码规则检测插件配置/","link":"","permalink":"http://hadesvip.github.io/2018/01/19/codeStyle模板和p3c代码规则检测插件配置/","excerpt":"","text":"格式化模板 使用的是谷歌的codeStyle 地址 1git clone https://github.com/google/styleguide.git 配置(下面是关于idea中的配置,eclipse同理) eclipse 选择的是eclipse-java-google-style.xml ,idea 选择的是 intellij-java-google-style.xml p3c代码规则检测插件 阿里的代码规则检测插件 地址 1git clone https://github.com/alibaba/p3c.git 安装 idea eclipse 参照官方描述 https://github.com/alibaba/p3c/tree/master/eclipse-plugin 使用 参照 https://github.com/alibaba/p3c/wiki","categories":[{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://hadesvip.github.io/tags/java/"},{"name":"工作笔记","slug":"工作笔记","permalink":"http://hadesvip.github.io/tags/工作笔记/"},{"name":"工具","slug":"工具","permalink":"http://hadesvip.github.io/tags/工具/"}]}]}